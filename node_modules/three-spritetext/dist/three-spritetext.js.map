{"version":3,"file":"three-spritetext.js","sources":["../src/index.js"],"sourcesContent":["import {\n  CanvasTexture,\n  Sprite,\n  SpriteMaterial,\n  SRGBColorSpace\n} from 'three';\n\nconst three = typeof window !== 'undefined' && window.THREE\n  ? window.THREE // Prefer consumption from global THREE, if exists\n  : {\n  CanvasTexture,\n  Sprite,\n  SpriteMaterial,\n  SRGBColorSpace\n};\n\nexport default class extends three.Sprite {\n  constructor(text = '', textHeight = 10, color = 'rgba(255, 255, 255, 1)') {\n    super(new three.SpriteMaterial());\n\n    this._text = `${text}`;\n    this._textHeight = textHeight;\n    this._color = color;\n    this._backgroundColor = false; // no background color\n\n    this._padding = 0;\n    this._borderWidth = 0;\n    this._borderRadius = 0;\n    this._borderColor = 'white';\n    this._offsetX = 0;\n    this._offsetY = 0;\n\n    this._strokeWidth = 0;\n    this._strokeColor = 'white';\n\n    this._fontFace = 'system-ui';\n    this._fontSize = 90; // defines text resolution\n    this._fontWeight = 'normal';\n\n    this._canvas = document.createElement('canvas');\n\n    this._genCanvas();\n  }\n\n  get text() { return this._text; }\n  set text(text) { this._text = text; this._genCanvas(); }\n  get textHeight() { return this._textHeight; }\n  set textHeight(textHeight) { this._textHeight = textHeight; this._genCanvas(); }\n  get color() { return this._color; }\n  set color(color) { this._color = color; this._genCanvas(); }\n  get backgroundColor() { return this._backgroundColor; }\n  set backgroundColor(color) { this._backgroundColor = color; this._genCanvas(); }\n  get padding() { return this._padding; }\n  set padding(padding) { this._padding = padding; this._genCanvas(); }\n  get borderWidth() { return this._borderWidth; }\n  set borderWidth(borderWidth) { this._borderWidth = borderWidth; this._genCanvas(); }\n  get borderRadius() { return this._borderRadius; }\n  set borderRadius(borderRadius) { this._borderRadius = borderRadius; this._genCanvas(); }\n  get borderColor() { return this._borderColor; }\n  set borderColor(borderColor) { this._borderColor = borderColor; this._genCanvas(); }\n  get offsetX() { return this._offsetX; }\n  set offsetX(offset) { this._offsetX = offset; this._genCanvas(); }\n  get offsetY() { return this._offsetY; }\n  set offsetY(offset) { this._offsetY = offset; this._genCanvas(); }\n  get fontFace() { return this._fontFace; }\n  set fontFace(fontFace) { this._fontFace = fontFace; this._genCanvas(); }\n  get fontSize() { return this._fontSize; }\n  set fontSize(fontSize) { this._fontSize = fontSize; this._genCanvas(); }\n  get fontWeight() { return this._fontWeight; }\n  set fontWeight(fontWeight) { this._fontWeight = fontWeight; this._genCanvas(); }\n  get strokeWidth() { return this._strokeWidth; }\n  set strokeWidth(strokeWidth) { this._strokeWidth = strokeWidth; this._genCanvas(); }\n  get strokeColor() { return this._strokeColor; }\n  set strokeColor(strokeColor) { this._strokeColor = strokeColor; this._genCanvas(); }\n\n  _genCanvas() {\n    const canvas = this._canvas;\n    const ctx = canvas.getContext('2d');\n\n    const relFactor = 1 / this.textHeight;\n\n    const border = Array.isArray(this.borderWidth) ? this.borderWidth : [this.borderWidth, this.borderWidth]; // x,y border\n    const relBorder = border.map(b => b * this.fontSize * relFactor); // border in canvas units\n\n    const borderRadius = Array.isArray(this.borderRadius) ? this.borderRadius : [this.borderRadius, this.borderRadius, this.borderRadius, this.borderRadius]; // tl tr br bl corners\n    const relBorderRadius = borderRadius.map(b => b * this.fontSize * relFactor); // border radius in canvas units\n\n    const padding = Array.isArray(this.padding) ? this.padding : [this.padding, this.padding]; // x,y padding\n    const relPadding = padding.map(p => p * this.fontSize * relFactor); // padding in canvas units\n\n    const relOffset = [this.offsetX, this.offsetY].map(o => o * this.fontSize * relFactor); // offset in canvas units\n\n    const lines = this.text.split('\\n');\n    const font = `${this.fontWeight} ${this.fontSize}px ${this.fontFace}`;\n\n    ctx.font = font; // measure canvas with appropriate font\n    const innerWidth = Math.max(...lines.map(line => ctx.measureText(line).width));\n    const innerHeight = this.fontSize * lines.length;\n    const boxWidth = innerWidth + relBorder[0] * 2 + relPadding[0] * 2;\n    const boxHeight = innerHeight + relBorder[1] * 2 + relPadding[1] * 2;\n    canvas.width = boxWidth + Math.abs(relOffset[0]);\n    canvas.height = boxHeight + Math.abs(relOffset[1]);\n\n    // offset transform (only needed for positive values)\n    ctx.translate(...relOffset.map(o => Math.max(0, o)));\n\n    // paint border\n    if (this.borderWidth) {\n      ctx.strokeStyle = this.borderColor;\n\n      if (relBorder[0]) { // left + right borders\n        const hb = relBorder[0] / 2;\n        ctx.lineWidth = relBorder[0];\n        ctx.beginPath();\n        ctx.moveTo(hb, relBorderRadius[0]);\n        ctx.lineTo(hb, boxHeight - relBorderRadius[3]);\n        ctx.moveTo(boxWidth - hb, relBorderRadius[1]);\n        ctx.lineTo(boxWidth - hb, boxHeight - relBorderRadius[2]);\n        ctx.stroke();\n      }\n\n      if (relBorder[1]) { // top + bottom borders\n        const hb = relBorder[1] / 2;\n        ctx.lineWidth = relBorder[1];\n        ctx.beginPath();\n        ctx.moveTo(Math.max(relBorder[0], relBorderRadius[0]), hb);\n        ctx.lineTo(boxWidth - Math.max(relBorder[0], relBorderRadius[1]), hb);\n        ctx.moveTo(Math.max(relBorder[0], relBorderRadius[3]), boxHeight - hb);\n        ctx.lineTo(boxWidth - Math.max(relBorder[0], relBorderRadius[2]), boxHeight - hb);\n        ctx.stroke();\n      }\n\n      if (this.borderRadius) { // strike rounded corners\n        const cornerWidth = Math.max(...relBorder);\n        const hb = cornerWidth / 2;\n        ctx.lineWidth = cornerWidth;\n        ctx.beginPath();\n        [\n          !!relBorderRadius[0] && [relBorderRadius[0], hb, hb, relBorderRadius[0]],\n          !!relBorderRadius[1] && [boxWidth - relBorderRadius[1], boxWidth - hb, hb, relBorderRadius[1]],\n          !!relBorderRadius[2] && [boxWidth - relBorderRadius[2], boxWidth - hb, boxHeight - hb, boxHeight - relBorderRadius[2]],\n          !!relBorderRadius[3] && [relBorderRadius[3], hb, boxHeight - hb, boxHeight - relBorderRadius[3]]\n        ].filter(d => d).forEach(([x0, x1, y0, y1]) => {\n          ctx.moveTo(x0, y0);\n          ctx.quadraticCurveTo(x1, y0, x1, y1);\n        });\n        ctx.stroke();\n      }\n    }\n\n    // paint background\n    if (this.backgroundColor) {\n      ctx.fillStyle = this.backgroundColor;\n      if (!this.borderRadius) {\n        ctx.fillRect(relBorder[0], relBorder[1], boxWidth - relBorder[0] * 2, boxHeight - relBorder[1] * 2);\n      } else { // fill with rounded corners\n        ctx.beginPath();\n        ctx.moveTo(relBorder[0], relBorderRadius[0]);\n        [\n          [relBorder[0], relBorderRadius[0], boxWidth - relBorderRadius[1], relBorder[1], relBorder[1], relBorder[1]], // t\n          [boxWidth - relBorder[0], boxWidth - relBorder[0], boxWidth - relBorder[0], relBorder[1], relBorderRadius[1], boxHeight - relBorderRadius[2]], // r\n          [boxWidth - relBorder[0], boxWidth - relBorderRadius[2], relBorderRadius[3], boxHeight - relBorder[1], boxHeight - relBorder[1], boxHeight - relBorder[1]], // b\n          [relBorder[0], relBorder[0], relBorder[0], boxHeight - relBorder[1], boxHeight - relBorderRadius[3], relBorderRadius[0]], // t\n        ].forEach(([x0, x1, x2, y0, y1, y2]) => {\n          ctx.quadraticCurveTo(x0, y0, x1, y1);\n          ctx.lineTo(x2, y2);\n        });\n        ctx.closePath();\n        ctx.fill();\n      }\n    }\n\n    ctx.translate(...relBorder);\n    ctx.translate(...relPadding);\n\n    // paint text\n    ctx.font = font; // Set font again after canvas is resized, as context properties are reset\n    ctx.fillStyle = this.color;\n    ctx.textBaseline = 'bottom';\n\n    const drawTextStroke = this.strokeWidth > 0;\n    if (drawTextStroke) {\n      ctx.lineWidth = this.strokeWidth * this.fontSize / 10;\n      ctx.strokeStyle = this.strokeColor;\n    }\n\n    lines.forEach((line, index) => {\n      const lineX = (innerWidth - ctx.measureText(line).width) / 2;\n      const lineY = (index + 1) * this.fontSize;\n\n      drawTextStroke && ctx.strokeText(line, lineX, lineY);\n      ctx.fillText(line, lineX, lineY);\n    });\n\n    // Inject canvas into sprite\n    if (this.material.map) this.material.map.dispose(); // gc previous texture\n    const texture = this.material.map = new three.CanvasTexture(canvas);\n    texture.colorSpace = three.SRGBColorSpace;\n\n    const yScale = this.textHeight * lines.length + border[1] * 2 + padding[1] * 2 + Math.abs(this.offsetY);\n    this.scale.set(yScale * canvas.width / canvas.height, yScale, 0);\n  }\n\n  clone() {\n    return new this.constructor(this.text, this.textHeight, this.color).copy(this);\n  }\n\n  copy(source) {\n    three.Sprite.prototype.copy.call(this, source);\n\n    this.color = source.color;\n    this.backgroundColor = source.backgroundColor;\n    this.padding = source.padding;\n    this.borderWidth = source.borderWidth;\n    this.borderColor = source.borderColor;\n    this.offsetX = source.offsetX;\n    this.offsetY = source.offsetY;\n    this.fontFace = source.fontFace;\n    this.fontSize = source.fontSize;\n    this.fontWeight = source.fontWeight;\n    this.strokeWidth = source.strokeWidth;\n    this.strokeColor = source.strokeColor;\n\n    return this;\n  }\n}\n"],"names":["three","window","THREE","CanvasTexture","Sprite","SpriteMaterial","SRGBColorSpace","_default","_three$Sprite","_this","text","arguments","length","undefined","textHeight","color","_classCallCheck","_callSuper","_text","concat","_textHeight","_color","_backgroundColor","_padding","_borderWidth","_borderRadius","_borderColor","_offsetX","_offsetY","_strokeWidth","_strokeColor","_fontFace","_fontSize","_fontWeight","_canvas","document","createElement","_genCanvas","_inherits","_createClass","key","get","set","padding","borderWidth","borderRadius","borderColor","offset","fontFace","fontSize","fontWeight","strokeWidth","strokeColor","value","_this2","canvas","ctx","getContext","relFactor","border","Array","isArray","relBorder","map","b","relBorderRadius","relPadding","p","relOffset","offsetX","offsetY","o","lines","split","font","innerWidth","Math","max","apply","_toConsumableArray","line","measureText","width","innerHeight","boxWidth","boxHeight","abs","height","translate","strokeStyle","hb","lineWidth","beginPath","moveTo","lineTo","stroke","cornerWidth","filter","d","forEach","_ref","_ref2","_slicedToArray","x0","x1","y0","y1","quadraticCurveTo","backgroundColor","fillStyle","fillRect","_ref3","_ref4","x2","y2","closePath","fill","textBaseline","drawTextStroke","index","lineX","lineY","strokeText","fillText","material","dispose","texture","colorSpace","yScale","scale","clone","constructor","copy","source","prototype","call"],"mappings":"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"}